services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    restart: always
    environment:
      NEO4J_AUTH: neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "MATCH (n) RETURN count(n);"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  python_app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: python_app
    depends_on:
      mongodb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    environment:
      MONGO_USER: root
      MONGO_PASSWORD: test
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
    volumes:
      - ./app:/app
    command: ["python", "main.py"]

volumes:
  mongo_data:
